/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    model_T: THREE.SkinnedMesh;
    mixamorigHips: THREE.Bone;
  };
  materials: {
    ["Body.003"]: THREE.MeshPhysicalMaterial;
  };
};

type ActionName =
  | "Armature.001|mixamo.com|Layer0"
  | "Armature.001|mixamo.com|Layer0.001"
  | "Armature.001|mixamo.com|Layer0.002"
  | "Idle"
  | "jump"
  | "run"
  | "Run"
  | "Run.001"
  | "Walk";
type GLTFActions = Record<ActionName, THREE.AnimationAction>;

export function Hero(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>(null);
  const { nodes, materials, animations } = useGLTF("/player.glb") as GLTFResult;
  return (
    <group
      ref={group}
      {...props}
      scale={0.9}
      position={[0, -0.9, 0]}
      dispose={null}
    >
      <group name="Scene">
        <group name="Armature" rotation={[Math.PI / 2, 0, 0]}>
          <skinnedMesh
            name="model_T"
            geometry={nodes.model_T.geometry}
            material={materials["Body.003"]}
            skeleton={nodes.model_T.skeleton}
          />
          <primitive object={nodes.mixamorigHips} />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/player.glb");
